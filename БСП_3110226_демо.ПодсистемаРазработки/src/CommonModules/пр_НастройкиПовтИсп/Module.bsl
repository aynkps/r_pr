
#Область  ПрограммныйИнтерфейс

Функция ВерсияБСП() Экспорт
	Возврат СтандартныеПодсистемыСервер.ВерсияБиблиотеки();	
КонецФункции 

Функция ИсполнятьКод(ИмяМодуля, Метод, Пользователь = Неопределено)   Экспорт 
	Возврат пр_Общий.ИсполнятьКод(ИмяМодуля, Метод, Пользователь);
КонецФункции 

Функция ИсполняемыйМодуль(ИмяМодуля, Пользователь = Неопределено)   Экспорт 
	Возврат пр_Общий.ИсполняемыйМодуль(ИмяМодуля, Пользователь);
КонецФункции 

Функция НастройкиИсполняемогоМодуля(ИмяМодуля, Пользователь = Неопределено)   Экспорт 
	Возврат пр_Общий.НастройкиИсполняемогоМодуля(ИмяМодуля, Пользователь);
КонецФункции 

Функция ИсполняемыйМетодМодуля(ИмяМодуля, Пользователь = Неопределено, ИмяМетода = "")   Экспорт 
	
	Возврат пр_Общий.ИсполняемыйМетодМодуля(ИмяМодуля, ИмяМетода, Пользователь); 
	
КонецФункции 
 
Функция ПолучитьИмяИнформационнойБазы(ПолноеИмя = Ложь)	Экспорт
	Возврат пр_Общий.ПолучитьИмяИнформационнойБазы(ПолноеИмя);
КонецФункции 

Функция ИДКонфигурации() Экспорт
	
	Возврат пр_Общий.ИДКонфигурации();
	
КонецФункции // ИДКонфигурации()

Функция ПрефиксЭтойИБ()  Экспорт
	Возврат Константы.ПрефиксУзлаРаспределеннойИнформационнойБазы.Получить();
КонецФункции 

//ПримерИспользования:
//ОбработкаОтладки = оду_ОбщийПовтИсп.ОбработкаОтладки("оду_Общий");
//Если ОбработкаОтладки <> Неопределено Тогда
//	ОбработкаОтладки.ОбменДаннымиУТ_УТАП_ПроверитьЗарегистрироватьИзменения(Источник, Отказ, РежимЗаписи, РежимПроведения);
//	Возврат;
//КонецЕсли; 
Функция ОбработкаОтладки(ИмяМодуля, РежимОтладкиМетода = Неопределено)   Экспорт
	
	ОбработкаОтладки = пр_Общий.ОбработкаОтладки(ИмяМодуля, РежимОтладкиМетода);
	Возврат ОбработкаОтладки;
	
КонецФункции 
 
//TODO: 
//Могут быть разные ТипыОбъектов: 
//Пример:
//СправочникСсылка.астКонтрагентыЕГАИС
//СправочникСсылка.алкКлассификаторОрганизацийЕГАИС
//Создать мх сопоставления объектов (РС)
//Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Стр.ТипОбъекта);
//пока просто отправляем без проверки
Функция МенеджерОбъектаПоПолномуИмени(Знач ИмяТипаОбъекта) Экспорт
	
	Если ИмяТипаОбъекта = "Документ.ПоступлениеТоваровУслуг" Тогда
		ИмяМенеджера = "Документ.ПриобретениеТоваровУслуг";
	ИначеЕсли ИмяТипаОбъекта = "Справочник.алкКлассификаторОрганизацийЕГАИС" Тогда
		ИмяМенеджера = "Справочник.астКонтрагентыЕГАИС";
	Иначе
		ИмяМенеджера = ИмяТипаОбъекта;
	КонецЕсли;
		
	Попытка
		Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ИмяМенеджера);
	Исключение
		Менеджер = Неопределено;
	КонецПопытки;
	
	Возврат  Менеджер;
	
КонецФункции

#КонецОбласти

Функция ТекущийПользователь()  Экспорт
	
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	Если НЕ ЗначениеЗаполнено(ТекПользователь) Тогда
		ТекПользователь = Пользователи.ТекущийПользователь();	
	КонецЕсли;
	Возврат ТекПользователь; 
	
КонецФункции 

#Область  РолиПрава

Функция ЕстьДоступПроводитьДокументыСозданныеНеВЭтойБазе(Пользователь)  Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ПользователиДополнительныеРеквизиты.Значение, ЛОЖЬ) КАК Разрешено
		|ИЗ
		|	Справочник.Пользователи.ДополнительныеРеквизиты КАК ПользователиДополнительныеРеквизиты
		|ГДЕ
		|	ПользователиДополнительныеРеквизиты.Ссылка = &Ссылка
		|	И ПользователиДополнительныеРеквизиты.Свойство = &Свойство";
	
	Свойство = пр_НастройкиПовтИсп.СвойствоПользователяРазрешеноМенятьОбъекты();
	Запрос.УстановитьПараметр("Свойство", Свойство);
	Запрос.УстановитьПараметр("Ссылка", Пользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если  РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;	
	КонецЕсли; 
	
	ВДЗ = РезультатЗапроса.Выбрать();
	ВДЗ.Следующий();
	
	Если ВДЗ.Разрешено = Истина Тогда
		Возврат ПраваРазработчика();
	КонецЕсли; 
	
	Возврат Ложь;	
	
КонецФункции 

Функция ПраваРазработчика()  Экспорт

	Возврат Пользователи.РолиДоступны("пр_Разработчк1С");

КонецФункции // ПраваРазработчика()

//ЕстьПравоОператоПервичкиСклад 
// Использ. в ОбработкаКорректировкаВычерковВРазрезеПричинВычерков
// Для ограничений
//
// Параметры:
//  ИмяСвойства  - <ПВХ.ДополнительныеРеквизитыИСведения> Имя свойства
//                 пример: ("Оператор первички склад")
//  Пользователь  - <Справочник.Пользователи> 
//
// Возвращаемое значение:
//   Булево   - <описание возвращаемого значения>
//
Функция ЕстьПраво(ИмяСвойства = "", Пользователь = Неопределено, Свойство  = Неопределено)   Экспорт
	
	Если Пользователь = Неопределено Тогда
		Пользователь = Пользователи.ТекущийПользователь();	
	КонецЕсли; 
	
	Если Свойство = Неопределено Тогда
		Свойство = пр_НастройкиПовтИсп.СвойствоПВХПоИмени(ИмяСвойства);
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ПользователиДополнительныеРеквизиты.Значение, ЛОЖЬ) КАК ЕстьПраво
		|ИЗ
		|	Справочник.Пользователи.ДополнительныеРеквизиты КАК ПользователиДополнительныеРеквизиты
		|ГДЕ
		|	ПользователиДополнительныеРеквизиты.Ссылка = &Пользователь
		|	И ПользователиДополнительныеРеквизиты.Свойство = &Свойство";
	
	
	Запрос.УстановитьПараметр("Свойство", Свойство);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	ВДЗ = РезультатЗапроса.Выбрать();
	
	Если ВДЗ.Следующий() Тогда
	 	Возврат	ВДЗ.ЕстьПраво; 
	КонецЕсли; 
	
КонецФункции

#КонецОбласти

#Область  Свойства_ПВХ

Функция СвойствоПользователяРазрешеноМенятьОбъекты()   Экспорт
	Свойство = пр_Общий.СсылкаПоGUID(ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения, "f901838a-e30a-11ec-83ed-ac1f6b8732b0");
	Возврат Свойство;
КонецФункции 

Функция СвойствоПВХПоИмени(ИмяСвойства)   Экспорт
	Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(ИмяСвойства);
	Возврат Свойство;
КонецФункции 

#КонецОбласти

#Область  Типы

Функция ТипСтрока() Экспорт
    Возврат Тип("Строка");
КонецФункции

Функция ТипДата() Экспорт
    Возврат Тип("Дата");
КонецФункции

Функция ТипФайл() Экспорт
    Возврат Тип("Файл");
КонецФункции

Функция ТипСтруктура() Экспорт
    Возврат Тип("Структура");
КонецФункции

Функция ТипНеопределено() Экспорт
    Возврат Тип("Неопределено");
КонецФункции

Функция ТипУникальныйИдентификатор() Экспорт
    Возврат Тип("УникальныйИдентификатор");
КонецФункции

Функция ТипЭлементСпискаЗначений() Экспорт 
    Возврат Тип("ЭлементСпискаЗначений");
КонецФункции

Функция ТипСписокЗначений() Экспорт 
    Возврат Тип("СписокЗначений");
КонецФункции

Функция ТипТабличныйДокумент() Экспорт 
    Возврат Тип("ТабличныйДокумент");
КонецФункции

Функция ТипМассив() Экспорт 
    Возврат Тип("Массив");
КонецФункции

#КонецОбласти
 